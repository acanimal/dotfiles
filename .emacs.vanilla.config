;;
;; Emacs configuration
;;

;; ----------------------------------------------------------------------------
;; Set package repositories
(require 'package)
(setq package-archives '(("melpa" . "https://melpa.org/packages/")
                         ("org" . "https://orgmode.org/elpa/")
                         ("elpa" . "https://elpa.gnu.org/packages/")))
(package-initialize)

;; ----------------------------------------------------------------------------
;; Unless packages are not available locally, dont refresh package archives
(unless package-archive-contents
  (package-refresh-contents))

;; Initialize use-package on non-Linux platforms
(unless (package-installed-p 'use-package)
   (package-install 'use-package))
(require 'use-package)
(setq use-package-always-ensure t)

;; ----------------------------------------------------------------------------
;; which-key, Emacs package that displays available keybindings in popup
(use-package which-key
  :init (which-key-mode)
  :diminish which-key-mode
  :config
  (setq which-key-idle-delay 0.3))

;; ----------------------------------------------------------------------------
;; counsel also install ivy and swiper packages.  
;; Utility packages to autocomplete commands
(use-package counsel
  :demand
  :config
  (setq ivy-use-virtual-buffers t
        ivy-count-format "%d/%d ")
  :init (ivy-mode))

;; ----------------------------------------------------------------------------
;; company, package to autocomplete any code
(use-package company
  :config
  (global-company-mode t))
(use-package company-box
  :hook (company-mode . company-box-mode))

;; ----------------------------------------------------------------------------
;; projectile to work with for projects
(use-package projectile
  :ensure t
  :init (projectile-mode t)
  :bind (:map projectile-mode-map
              ("s-p" . projectile-command-map)
              ("C-c p" . projectile-command-map)))

;; ----------------------------------------------------------------------------
;; treemacs
(use-package treemacs
  :ensure t
  :defer t
  :init
  (treemacs)
  (with-eval-after-load 'treemacs
    (define-key treemacs-mode-map [mouse-1] #'treemacs-single-click-expand-action))
  (with-eval-after-load 'winum
    (define-key winum-keymap (kbd "M-0") #'treemacs-select-window))
  :config
  (progn
    (setq treemacs-display-in-side-window          t
          treemacs-follow-after-init               t
          treemacs-expand-after-init               t
          treemacs-hide-dot-git-directory          nil
	        treemacs-indent-guide-style              'line
          treemacs-is-never-other-window           nil
          treemacs-max-git-entries                 5000
          treemacs-no-png-images                   nil
          treemacs-litter-directories              '("/node_modules" "/.venv" "/.cask")
          treemacs-show-hidden-files               t
          treemacs-width                           35
          treemacs-resize-icons                    15)
    
    ;; The default width and height of the icons is 22 pixels. If you are
    ;; using a Hi-DPI display, uncomment this to double the icon size.
    ;;(treemacs-resize-icons 44)
    (treemacs-follow-mode t)
    (treemacs-filewatch-mode t)
    (treemacs-fringe-indicator-mode 'always)
    (treemacs-git-commit-diff-mode t)
    (treemacs-git-mode 'deferred)
    (treemacs-git-commit-diff-mode t)
    (treemacs-hide-gitignored-files-mode nil)
    (treemacs-indent-guide-mode t))
  :bind
  (:map global-map
        ("M-0"       . treemacs-select-window)
        ("C-x t 1"   . treemacs-delete-other-windows)
        ("C-x t t"   . treemacs)
        ("C-x t d"   . treemacs-select-directory)
        ("C-x t w"   . treemacs-switch-workspace)
        ("C-x t B"   . treemacs-bookmark)
        ("C-x t C-t" . treemacs-find-file)
        ("C-x t M-t" . treemacs-find-tag)))

;; Integrate treemacs and projectile
(use-package treemacs-projectile
  :after (treemacs projectile)
  :ensure t)

;; ----------------------------------------------------------------------------
;; lsp-mode
(use-package lsp-mode
  :init
  ;; set prefix for lsp-command-keymap (few alternatives - "C-l", "C-c l")
  (setq lsp-keymap-prefix "C-c l")
  :hook (;; replace XXX-mode with concrete major-mode(e. g. python-mode)
         (javascript-mode . lsp)
         ;; if you want which-key integration
         (lsp-mode . lsp-enable-which-key-integration))
  :commands lsp)

(use-package lsp-ui :commands lsp-ui-mode)
(use-package lsp-ivy :commands lsp-ivy-workspace-symbol)
(use-package lsp-treemacs :commands lsp-treemacs-errors-list)


;; ----------------------------------------------------------------------------
;; Set initial size
(setq default-frame-alist
        (append '((width . 200) (height . 80) (top . 0) (left . -1))
                default-frame-alist))

;; Hide some components
(tool-bar-mode -1)
(menu-bar-mode -1)
(tab-bar-mode -1)
(scroll-bar-mode -1)

;; Hide welcome screen
(setq inhibit-startup-screen t)

;; Blink cursor forever
(blink-cursor-mode 0)

;; Show line and column in mode line
(line-number-mode t) 
(column-number-mode t)
(global-display-line-numbers-mode t)

;; Set theme
(load-theme 'wombat)

(setq-default tab-width 2)
(setq-default indent-tabs-mode nil)

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(package-selected-packages
   '(company-box treemacs-projectile treemacs counsel which-key use-package ivy)))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
